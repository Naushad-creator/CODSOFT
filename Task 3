# Import required libraries
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Sample dataset
data = {
    'movie_id': [1, 2, 3, 4, 5],
    'title': ["The Matrix", "John Wick", "Interstellar", "Inception", "The Dark Knight"],
    'genre': ["sci-fi action", "action thriller", "sci-fi adventure", "sci-fi thriller", "action crime"]
}

# Create a DataFrame
df = pd.DataFrame(data)

# Content-based filtering using genres
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(df['genre'])

# Compute similarity between movies
cosine_sim = cosine_similarity(tfidf_matrix, tfidf_matrix)

# Function to get movie recommendations
def recommend_movie(title, cosine_sim=cosine_sim):
    # Get index of the movie
    idx = df[df['title'] == title].index[0]
    # Get similarity scores
    sim_scores = list(enumerate(cosine_sim[idx]))
    # Sort movies based on similarity scores
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    # Get top 3 similar movies (excluding itself)
    sim_scores = sim_scores[1:4]
    movie_indices = [i[0] for i in sim_scores]
    return df['title'].iloc[movie_indices]

# Example usage
print("Movies similar to 'Inception':")
print(recommend_movie('Inception'))
